ss pc = 0x7f52dc2ee5ec: cmp rax, 0xfffffffffffff000
ss pc = 0x7f52dc2ee5f2: jnbe 0x7f52dc2ee5fd
ss pc = 0x7f52dc2ee5f8: jmp 0x7f52dc2ee5fe
ss pc = 0x7f52dc2ee5fe: pop rbx
ss pc = 0x7f52dc2ee5ff: pop rbp
ss pc = 0x7f52dc2ee600: pop r12
ss pc = 0x7f52dc2ee602: pop r13
ss pc = 0x7f52dc2ee604: pop r14
ss pc = 0x7f52dc2ee606: pop r15
ss pc = 0x7f52dc2ee608: xchg qword ptr [rsp], rax
ss pc = 0x7f52dc2ee60c: xchg qword ptr [rip-0x38613], rsp
ss pc = 0x7f52dc2ee613: pushfq 
ss pc = 0x7f52dc2ee614: push rcx
ss pc = 0x7f52dc2ee615: xchg qword ptr [rip-0x3662c], rsp
ss pc = 0x7f52dc2ee61c: cmp rsp, qword ptr [rip-0x3663b]
ss pc = 0x7f52dc2ee623: jz 0x7f52dc2ee633
ss pc = 0x7f52dc2ee625: pop rcx
ss pc = 0x7f52dc2ee626: cmp rax, rcx
ss pc = 0x7f52dc2ee629: pop rcx
ss pc = 0x7f52dc2ee62a: jz 0x7f52dc2ee633
ss pc = 0x7f52dc2ee62c: lea rcx, ptr [rip+0x26]
ss pc = 0x7f52dc2ee633: mov qword ptr [rip-0x38632], rcx
ss pc = 0x7f52dc2ee63a: xchg qword ptr [rip-0x36651], rsp
ss pc = 0x7f52dc2ee641: pop rcx
ss pc = 0x7f52dc2ee642: popfq 
ss pc = 0x7f52dc2ee643: xchg qword ptr [rip-0x3864a], rsp
ss pc = 0x7f52dc2ee64a: xchg qword ptr [rsp], rax
ss pc = 0x7f52dc2ee64e: lea rsp, ptr [rsp+0x8]
ss pc = 0x7f52dc2ee653: jmp qword ptr [rip-0x38651]

ss pc = 0x7f52dc2ee659: lea rsp, ptr [rsp-0x8]
ss pc = 0x7f52dc2ee65e: int3

ss pc = 0x7f52dc2f0bb1: cmp rax, 0xffffffffffffffff
ss pc = 0x7f52dc2f0bb5: mov r10, qword ptr [rbp-0xe8]
ss pc = 0x7f52dc2f0bbc: jnz 0x7f52dc2f08ac
ss pc = 0x7f52dc2f08ac: add r10, 0x30
ss pc = 0x7f52dc2f08b0: lea rax, ptr [r14+r14*2]
ss pc = 0x7f52dc2f08b4: shl rax, 0x4
ss pc = 0x7f52dc2f08b8: add rax, qword ptr [rbp-0x110]
ss pc = 0x7f52dc2f08bf: cmp r10, rax
ss pc = 0x7f52dc2f08c2: jnb 0x7f52dc2f0bc8
ss pc = 0x7f52dc2f0bc8: mov rdx, qword ptr [r12+0x10]
ss pc = 0x7f52dc2f0bcd: int3 
ss pc = 0x7f52dc2f0bce: mov rsp, qword ptr [rbp-0x118]
ss pc = 0x7f52dc2f0bd5: int3 
ss pc = 0x7f52dc2f0bd6: test rdx, rdx
ss pc = 0x7f52dc2f0bd9: jz 0x7f52dc2f0be4
ss pc = 0x7f52dc2f0bdf: jmp 0x7f52dc2f0be5
ss pc = 0x7f52dc2f0be5: mov r8, qword ptr [r12]
ss pc = 0x7f52dc2f0be9: add rdx, r8
ss pc = 0x7f52dc2f0bec: test rdx, rdx
ss pc = 0x7f52dc2f0bef: mov qword ptr [r12+0x10], rdx
ss pc = 0x7f52dc2f0bf4: jz 0x7f52dc2f0bff
ss pc = 0x7f52dc2f0bfa: jmp 0x7f52dc2f0c00
ss pc = 0x7f52dc2f0c00: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c03: lea rsi, ptr [r12+0x40]
ss pc = 0x7f52dc2f0c08: test rax, rax
ss pc = 0x7f52dc2f0c0b: jz 0x7f52dc2f0c16
ss pc = 0x7f52dc2f0c11: jmp 0x7f52dc2f0c17
ss pc = 0x7f52dc2f0c17: mov edi, 0x6fffffff
ss pc = 0x7f52dc2f0c1c: mov r11d, 0x6ffffdff
ss pc = 0x7f52dc2f0c22: mov r14d, 0x6ffffeff
ss pc = 0x7f52dc2f0c28: mov rbx, 0x37ffff1a0
ss pc = 0x7f52dc2f0c32: mov r10d, 0x31
ss pc = 0x7f52dc2f0c38: mov r9d, 0x70000021
ss pc = 0x7f52dc2f0c3e: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c4d: jmp 0x7f52dc2f0c6d
ss pc = 0x7f52dc2f0c6d: mov rcx, rdi
ss pc = 0x7f52dc2f0c70: sub rcx, rax
ss pc = 0x7f52dc2f0c73: cmp rcx, 0xf
ss pc = 0x7f52dc2f0c77: jbe 0x7f52dc2f0cf3
ss pc = 0x7f52dc2f0c7d: jmp 0x7f52dc2f0c83
ss pc = 0x7f52dc2f0c83: lea ecx, ptr [rax+rax*1]
ss pc = 0x7f52dc2f0c86: sar ecx, 0x1
ss pc = 0x7f52dc2f0c88: cmp ecx, 0xfffffffc
ss pc = 0x7f52dc2f0c8b: jbe 0x7f52dc2f0c97
ss pc = 0x7f52dc2f0c97: mov rcx, r11
ss pc = 0x7f52dc2f0c9a: sub rcx, rax
ss pc = 0x7f52dc2f0c9d: cmp rcx, 0xb
ss pc = 0x7f52dc2f0ca1: jnbe 0x7f52dc2f0cad
ss pc = 0x7f52dc2f0cad: mov rcx, r14
ss pc = 0x7f52dc2f0cb0: sub rcx, rax
ss pc = 0x7f52dc2f0cb3: cmp rcx, 0xa
ss pc = 0x7f52dc2f0cb7: jnbe 0x7f52dc2f0cc2
ss pc = 0x7f52dc2f0cbd: jmp 0x7f52dc2f0cc3
ss pc = 0x7f52dc2f0cc3: neg rax
ss pc = 0x7f52dc2f0cc6: mov rcx, 0x37ffffa00
ss pc = 0x7f52dc2f0cd0: lea rax, ptr [rsi+rax*8]
ss pc = 0x7f52dc2f0cd4: mov qword ptr [rax+rcx*1], rdx
ss pc = 0x7f52dc2f0cd8: jmp 0x7f52dc2f0cdd
ss pc = 0x7f52dc2f0cdd: add rdx, 0x10
ss pc = 0x7f52dc2f0ce1: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0ce4: test rax, rax
ss pc = 0x7f52dc2f0ce7: jz 0x7f52dc2f0cf2
ss pc = 0x7f52dc2f0ced: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c4d: jmp 0x7f52dc2f0c6d
ss pc = 0x7f52dc2f0c6d: mov rcx, rdi
ss pc = 0x7f52dc2f0c70: sub rcx, rax
ss pc = 0x7f52dc2f0c73: cmp rcx, 0xf
ss pc = 0x7f52dc2f0c77: jbe 0x7f52dc2f0cf3
ss pc = 0x7f52dc2f0cf3: mov rcx, r9
ss pc = 0x7f52dc2f0cf6: sub rcx, rax
ss pc = 0x7f52dc2f0cf9: mov rax, rcx
ss pc = 0x7f52dc2f0cfc: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0d00: add rdx, 0x10
ss pc = 0x7f52dc2f0d04: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0d07: test rax, rax
ss pc = 0x7f52dc2f0d0a: jz 0x7f52dc2f0d16
ss pc = 0x7f52dc2f0d10: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c4d: jmp 0x7f52dc2f0c6d
ss pc = 0x7f52dc2f0c6d: mov rcx, rdi
ss pc = 0x7f52dc2f0c70: sub rcx, rax
ss pc = 0x7f52dc2f0c73: cmp rcx, 0xf
ss pc = 0x7f52dc2f0c77: jbe 0x7f52dc2f0cf3
ss pc = 0x7f52dc2f0cf3: mov rcx, r9
ss pc = 0x7f52dc2f0cf6: sub rcx, rax
ss pc = 0x7f52dc2f0cf9: mov rax, rcx
ss pc = 0x7f52dc2f0cfc: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0d00: add rdx, 0x10
ss pc = 0x7f52dc2f0d04: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0d07: test rax, rax
ss pc = 0x7f52dc2f0d0a: jz 0x7f52dc2f0d16
ss pc = 0x7f52dc2f0d10: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c53: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0c57: add rdx, 0x10
ss pc = 0x7f52dc2f0c5b: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0c5e: test rax, rax
ss pc = 0x7f52dc2f0c61: jz 0x7f52dc2f0c6c
ss pc = 0x7f52dc2f0c67: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c4d: jmp 0x7f52dc2f0c6d
ss pc = 0x7f52dc2f0c6d: mov rcx, rdi
ss pc = 0x7f52dc2f0c70: sub rcx, rax
ss pc = 0x7f52dc2f0c73: cmp rcx, 0xf
ss pc = 0x7f52dc2f0c77: jbe 0x7f52dc2f0cf3
ss pc = 0x7f52dc2f0cf3: mov rcx, r9
ss pc = 0x7f52dc2f0cf6: sub rcx, rax
ss pc = 0x7f52dc2f0cf9: mov rax, rcx
ss pc = 0x7f52dc2f0cfc: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0d00: add rdx, 0x10
ss pc = 0x7f52dc2f0d04: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0d07: test rax, rax
ss pc = 0x7f52dc2f0d0a: jz 0x7f52dc2f0d16
ss pc = 0x7f52dc2f0d10: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c4d: jmp 0x7f52dc2f0c6d
ss pc = 0x7f52dc2f0c6d: mov rcx, rdi
ss pc = 0x7f52dc2f0c70: sub rcx, rax
ss pc = 0x7f52dc2f0c73: cmp rcx, 0xf
ss pc = 0x7f52dc2f0c77: jbe 0x7f52dc2f0cf3
ss pc = 0x7f52dc2f0cf3: mov rcx, r9
ss pc = 0x7f52dc2f0cf6: sub rcx, rax
ss pc = 0x7f52dc2f0cf9: mov rax, rcx
ss pc = 0x7f52dc2f0cfc: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0d00: add rdx, 0x10
ss pc = 0x7f52dc2f0d04: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0d07: test rax, rax
ss pc = 0x7f52dc2f0d0a: jz 0x7f52dc2f0d16
ss pc = 0x7f52dc2f0d10: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c4d: jmp 0x7f52dc2f0c6d
ss pc = 0x7f52dc2f0c6d: mov rcx, rdi
ss pc = 0x7f52dc2f0c70: sub rcx, rax
ss pc = 0x7f52dc2f0c73: cmp rcx, 0xf
ss pc = 0x7f52dc2f0c77: jbe 0x7f52dc2f0cf3
ss pc = 0x7f52dc2f0cf3: mov rcx, r9
ss pc = 0x7f52dc2f0cf6: sub rcx, rax
ss pc = 0x7f52dc2f0cf9: mov rax, rcx
ss pc = 0x7f52dc2f0cfc: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0d00: add rdx, 0x10
ss pc = 0x7f52dc2f0d04: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0d07: test rax, rax
ss pc = 0x7f52dc2f0d0a: jz 0x7f52dc2f0d16
ss pc = 0x7f52dc2f0d10: jmp 0x7f52dc2f0c43
ss pc = 0x7f52dc2f0c43: cmp rax, 0x21
ss pc = 0x7f52dc2f0c47: jbe 0x7f52dc2f0c53
ss pc = 0x7f52dc2f0c4d: jmp 0x7f52dc2f0c6d
ss pc = 0x7f52dc2f0c6d: mov rcx, rdi
ss pc = 0x7f52dc2f0c70: sub rcx, rax
ss pc = 0x7f52dc2f0c73: cmp rcx, 0xf
ss pc = 0x7f52dc2f0c77: jbe 0x7f52dc2f0cf3
ss pc = 0x7f52dc2f0cf3: mov rcx, r9
ss pc = 0x7f52dc2f0cf6: sub rcx, rax
ss pc = 0x7f52dc2f0cf9: mov rax, rcx
ss pc = 0x7f52dc2f0cfc: mov qword ptr [rsi+rax*8], rdx
ss pc = 0x7f52dc2f0d00: add rdx, 0x10
ss pc = 0x7f52dc2f0d04: mov rax, qword ptr [rdx]
ss pc = 0x7f52dc2f0d07: test rax, rax
ss pc = 0x7f52dc2f0d0a: jz 0x7f52dc2f0d16
ss pc = 0x7f52dc2f0d16: test r8, r8
ss pc = 0x7f52dc2f0d19: jz 0x7f52dc2f0d24
ss pc = 0x7f52dc2f0d1f: jmp 0x7f52dc2f0d25
ss pc = 0x7f52dc2f0d25: mov rax, qword ptr [r12+0x60]
ss pc = 0x7f52dc2f0d2a: test rax, rax
ss pc = 0x7f52dc2f0d2d: jz 0x7f52dc2f0d39
ss pc = 0x7f52dc2f0d33: jmp 0x7f52dc2f15f9
ss pc = 0x7f52dc2f15f9: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f15fd: mov rax, qword ptr [r12+0x58]
ss pc = 0x7f52dc2f1602: test rax, rax
ss pc = 0x7f52dc2f1605: jz 0x7f52dc2f1610
ss pc = 0x7f52dc2f160b: jmp 0x7f52dc2f0d4d
ss pc = 0x7f52dc2f0d4d: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f0d51: mov rax, qword ptr [r12+0x68]
ss pc = 0x7f52dc2f0d56: test rax, rax
ss pc = 0x7f52dc2f0d59: jz 0x7f52dc2f0d64
ss pc = 0x7f52dc2f0d5f: jmp 0x7f52dc2f0d65
ss pc = 0x7f52dc2f0d65: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f0d69: mov rax, qword ptr [r12+0x70]
ss pc = 0x7f52dc2f0d6e: test rax, rax
ss pc = 0x7f52dc2f0d71: jz 0x7f52dc2f0d7c
ss pc = 0x7f52dc2f0d77: jmp 0x7f52dc2f0d7d
ss pc = 0x7f52dc2f0d7d: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f0d81: mov rax, qword ptr [r12+0x78]
ss pc = 0x7f52dc2f0d86: test rax, rax
ss pc = 0x7f52dc2f0d89: jz 0x7f52dc2f0d94
ss pc = 0x7f52dc2f0d8f: jmp 0x7f52dc2f0d95
ss pc = 0x7f52dc2f0d95: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f0d99: mov rax, qword ptr [r12+0xf8]
ss pc = 0x7f52dc2f0da1: test rax, rax
ss pc = 0x7f52dc2f0da4: jz 0x7f52dc2f1831
ss pc = 0x7f52dc2f0daa: jmp 0x7f52dc2f0db0
ss pc = 0x7f52dc2f0db0: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f0db4: mov rax, qword ptr [r12+0x1c8]
ss pc = 0x7f52dc2f0dbc: test rax, rax
ss pc = 0x7f52dc2f0dbf: jz 0x7f52dc2f0dca
ss pc = 0x7f52dc2f0dc5: jmp 0x7f52dc2f0dcb
ss pc = 0x7f52dc2f0dcb: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f0dcf: mov rax, qword ptr [r12+0x298]
ss pc = 0x7f52dc2f0dd7: test rax, rax
ss pc = 0x7f52dc2f0dda: jz 0x7f52dc2f0de5
ss pc = 0x7f52dc2f0de0: jmp 0x7f52dc2f0de6
ss pc = 0x7f52dc2f0de6: add qword ptr [rax+0x8], r8
ss pc = 0x7f52dc2f0dea: mov rax, qword ptr [r12+0xe0]
ss pc = 0x7f52dc2f0df2: test rax, rax
ss pc = 0x7f52dc2f0df5: jz 0x7f52dc2f0e12
ss pc = 0x7f52dc2f0dfb: jmp 0x7f52dc2f0e01
ss pc = 0x7f52dc2f0e01: cmp qword ptr [rax+0x8], 0x7
ss pc = 0x7f52dc2f0e06: jnz 0x7f52dc2f0e11
ss pc = 0x7f52dc2f0e0c: jmp 0x7f52dc2f0e12
ss pc = 0x7f52dc2f0e12: cmp qword ptr [r12+0x78], 0x0
ss pc = 0x7f52dc2f0e18: jz 0x7f52dc2f0e23
ss pc = 0x7f52dc2f0e1e: jmp 0x7f52dc2f0e24
ss pc = 0x7f52dc2f0e24: mov rax, qword ptr [r12+0x88]
ss pc = 0x7f52dc2f0e2c: cmp qword ptr [rax+0x8], 0x18
ss pc = 0x7f52dc2f0e31: jnz 0x7f52dc2f0e3c
ss pc = 0x7f52dc2f0e37: jmp 0x7f52dc2f0e3d
ss pc = 0x7f52dc2f0e3d: mov rdx, qword ptr [r12+0x130]
ss pc = 0x7f52dc2f0e45: test rdx, rdx
ss pc = 0x7f52dc2f0e48: jz 0x7f52dc2f0e54
ss pc = 0x7f52dc2f0e4e: jmp 0x7f52dc2f1611
ss pc = 0x7f52dc2f1611: mov rax, qword ptr [rdx+0x8]
ss pc = 0x7f52dc2f1615: test al, 0x2
ss pc = 0x7f52dc2f1617: mov dword ptr [r12+0x3d8], eax
ss pc = 0x7f52dc2f161f: jz 0x7f52dc2f162b
ss pc = 0x7f52dc2f162b: test al, 0x4
ss pc = 0x7f52dc2f162d: jz 0x7f52dc2f1639
ss pc = 0x7f52dc2f1639: test al, 0x8
ss pc = 0x7f52dc2f163b: jnz 0x7f52dc2f1646
ss pc = 0x7f52dc2f1641: jmp 0x7f52dc2f0e54
ss pc = 0x7f52dc2f0e54: mov rax, qword ptr [r12+0x170]
ss pc = 0x7f52dc2f0e5c: test rax, rax
ss pc = 0x7f52dc2f0e5f: jz 0x7f52dc2f0e6b
ss pc = 0x7f52dc2f0e6b: mov edx, dword ptr [r12+0x3d4]
ss pc = 0x7f52dc2f0e73: jmp 0x7f52dc2f0e78
ss pc = 0x7f52dc2f0e78: cmp qword ptr [r12+0x128], 0x0
ss pc = 0x7f52dc2f0e81: jz 0x7f52dc2f0e8d
ss pc = 0x7f52dc2f0e8d: and edx, 0x40
ss pc = 0x7f52dc2f0e90: jz 0x7f52dc2f0e9c
ss pc = 0x7f52dc2f0e9c: mov rax, qword ptr [r12+0x2a0]
ss pc = 0x7f52dc2f0ea4: test rax, rax
ss pc = 0x7f52dc2f0ea7: jz 0x7f52dc2f0eb2
ss pc = 0x7f52dc2f0ead: jmp 0x7f52dc2f0eb3
ss pc = 0x7f52dc2f0eb3: add rax, qword ptr [r12]
ss pc = 0x7f52dc2f0eb7: mov qword ptr [r12+0x2a0], rax
ss pc = 0x7f52dc2f0ebf: mov qword ptr [rip-0x3aebe], rcx
ss pc = 0x7f52dc2f0ec6: mov rcx, qword ptr [rip-0x37c05]
ss pc = 0x7f52dc2f0ecd: mov eax, dword ptr [rcx]
ss pc = 0x7f52dc2f0ecf: mov rcx, qword ptr [rip-0x3aece]
ss pc = 0x7f52dc2f0ed6: not eax
ss pc = 0x7f52dc2f0ed8: and rax, qword ptr [rbp-0xf0]
ss pc = 0x7f52dc2f0edf: test al, 0x1
ss pc = 0x7f52dc2f0ee1: jnz 0x7f52dc2f0eec
ss pc = 0x7f52dc2f0ee7: jmp 0x7f52dc2f0eed
ss pc = 0x7f52dc2f0eed: mov rax, qword ptr [r12+0x418]
ss pc = 0x7f52dc2f0ef5: test rax, rax
ss pc = 0x7f52dc2f0ef8: jz 0x7f52dc2f18a0
ss pc = 0x7f52dc2f18a0: mov edi, dword ptr [rbp-0xdc]
ss pc = 0x7f52dc2f18a6: xchg qword ptr [rip-0x3b8ad], rsp
ss pc = 0x7f52dc2f18ad: pushfq 
ss pc = 0x7f52dc2f18ae: xchg qword ptr [rip-0x398c5], rsp
ss pc = 0x7f52dc2f18b5: cmp rsp, qword ptr [rip-0x398c4]
ss pc = 0x7f52dc2f18bc: jz 0x7f52dc2f18ca
ss pc = 0x7f52dc2f18be: push qword ptr [rip-0x38514]
ss pc = 0x7f52dc2f18c4: push qword ptr [rip-0x38522]
ss pc = 0x7f52dc2f18ca: xchg qword ptr [rip-0x398e1], rsp
ss pc = 0x7f52dc2f18d1: popfq 
ss pc = 0x7f52dc2f18d2: xchg qword ptr [rip-0x3b8d9], rsp
ss pc = 0x7f52dc2f18d9: push qword ptr [rip-0x38527]
ss pc = 0x7f52dc2f18df: jmp 0x7f52dc2ee57c
ss pc = 0x7f52dc2ee57c: mov eax, 0x3
ss pc = 0x7f52dc2ee581: int3 
syscall CLOSE
memcheck: /afs/.ir/users/n/m/nmosier/memcheck/src/memcheck.cc:180: void SyscallTracker::pre_handler(uint8_t*): Assertion `syscall.no() == last_syscall' failed.
